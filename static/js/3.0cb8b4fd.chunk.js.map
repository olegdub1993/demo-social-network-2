{"version":3,"sources":["hoc/WithRedirect.jsx","components/Profile/ProfileInfo/Status/Status.module.css","components/Profile/ProfileInfo/Status/StatusWithHoks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","redux/store-context.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","connect","state","isAuth","auth","props","to","module","exports","StatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","className","styles","content","src","photos","large","avatar","aboutMe","Preloader","Post","post","message","maxLength10","maxLength","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","FormControls","name","typefield","validate","required","Array","prototype","myMap","callback","newArray","index","this","length","push","el","console","log","MyPosts","React","memo","postElements","posts","map","a","key","id","addPostForm","addPost","newPostText","MyPostsContainer","createContext","profilePage","Profile","dispatch","ProfileContainer","match","params","userId","history","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.0cb8b4fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { setAuthData } from \"../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router\";\r\nconst withAuthRedirect = (Component) => {\r\n  let redirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return <Component {...props} />;\r\n  };\r\n  let mapStateToProps = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth,\r\n    };\r\n  };\r\n  return connect(mapStateToProps, {})(redirectComponent);\r\n};\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Status_header__3nTaA\"};","import styles from \"./Status.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { setAuthData } from \"../../../../redux/auth-reducer\";\r\nconst StatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={() => activateEditMode()}>\r\n            {props.status || \"no status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={() => deactivateEditMode()}\r\n            value={status}\r\n            onChange={onStatusChange}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusWithHooks;\r\n","import styles from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport StatusWithHooks from \"./Status/StatusWithHoks\";\r\nimport avatar from \"../../../logo.svg\";\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={styles.content}>\r\n      <div>Deskpapers</div>\r\n      <StatusWithHooks\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <div>\r\n        <img src={props.profile.photos.large || avatar} />\r\n      </div>\r\n      <div>{props.profile.aboutMe}</div>\r\n\r\n      <div>Description</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import styles from \"./Post.module.css\";\r\nimport React from \"react\";\r\nconst Post = (props) => {\r\n  return <div className={styles.post}> {props.message}</div>;\r\n};\r\nexport default Post;\r\n","import styles from \"./AddPostForm.module.css\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  FormControls,\r\n  Textarea,\r\n} from \"../../../common/formControls/formControls\";\r\nimport { maxLength, required } from \"../../../../utils/validators/validators\";\r\nconst maxLength10 = maxLength(10);\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={FormControls}\r\n        name={\"newPostText\"}\r\n        typefield=\"textarea\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <button>Add new post</button>\r\n    </form>\r\n  );\r\n};\r\nconst AddPostReduxForm = reduxForm({ form: \"addPostForm\" })(AddPostForm);\r\nexport default AddPostReduxForm;\r\n","import styles from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\nlet array = [1, 4, 7, 9, 55, 3, 33, 555];\r\n\r\nArray.prototype.myMap = function (callback) {\r\n  const newArray = [];\r\n  const thisArray = this;\r\n  for (let index = 0; index < thisArray.length; index++) {\r\n    if (callback(thisArray[index], index, thisArray))\r\n      newArray.push(thisArray[index]);\r\n  }\r\n  return newArray;\r\n};\r\nconst newArray = array.myMap((el) => el > 15);\r\nconsole.log(newArray);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"render\");\r\n  let postElements = props.posts.map((a) => (\r\n    <Post key={a.id} message={a.message} />\r\n  ));\r\n  const addPost = (addPostForm) => props.addPost(addPostForm.newPostText);\r\n  return (\r\n    <div className={styles.posts}>\r\n      <AddPostForm onSubmit={addPost} />\r\n      <div>My posts</div>\r\n      {postElements}\r\n    </div>\r\n  );\r\n});\r\nexport default MyPosts;\r\n","import styles from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport StoreContext from \"../../../redux/store-context\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nlet StoreContext = React.createContext();\r\nexport let Provider = (props) => {\r\n  return (\r\n    <StoreContext.Provider value={props.store}>\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\nexport default StoreContext;\r\n","import styles from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { connect } from \"react-redux\";\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={styles.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer\r\n        dispatch={props.dispatch}\r\n        newPostText={props.newPostText}\r\n        posts={props.posts}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import styles from \"./Profile.module.css\";\r\nimport React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport withAuthRedirect from \"../../hoc/WithRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let id = this.props.match.params.userId;\r\n    if (!id) {\r\n      id = this.props.id;\r\n      if (!id) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(id);\r\n    this.props.getUserStatus(id);\r\n  }\r\n  render() {\r\n    return <Profile {...this.props} />;\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    id: state.auth.id,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus })\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}